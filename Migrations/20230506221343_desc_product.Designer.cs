// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPP.Models;

#nullable disable

namespace NPP.Migrations
{
    [DbContext(typeof(NppcreateChihradzeContext))]
    [Migration("20230506221343_desc_product")]
    partial class desc_product
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Cyrillic_General_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NPP.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateContract")
                        .HasColumnType("date");

                    b.Property<int>("IdOrgProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdWorker")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdOrgProduct");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdWorker");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("NPP.Models.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("County", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdContract");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("NPP.Models.OrgProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdOrg")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrg");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrgProduct", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<int?>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserOrg")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCountry");

                    b.HasIndex("IdUserOrg");

                    b.ToTable("Organization", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTypeEquipment")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeEquipment");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Status_1");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("NPP.Models.TypeEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeEquipment", (string)null);
                });

            modelBuilder.Entity("NPP.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Имя пользователя");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateDismissal")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateHiring")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdDepartment")
                        .HasColumnType("int");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdPost");

                    b.ToTable("Worker", (string)null);
                });

            modelBuilder.Entity("NPP.Models.Contract", b =>
                {
                    b.HasOne("NPP.Models.OrgProduct", "IdOrgProductNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("IdOrgProduct")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_OrgProduct");

                    b.HasOne("NPP.Models.Status", "IdStatusNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_Status");

                    b.HasOne("NPP.Models.Worker", "IdWorkerNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("IdWorker")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_Worker");

                    b.Navigation("IdOrgProductNavigation");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("IdWorkerNavigation");
                });

            modelBuilder.Entity("NPP.Models.Delivery", b =>
                {
                    b.HasOne("NPP.Models.Contract", "IdContractNavigation")
                        .WithMany("Deliveries")
                        .HasForeignKey("IdContract")
                        .IsRequired()
                        .HasConstraintName("FK_Delivery_Contract");

                    b.Navigation("IdContractNavigation");
                });

            modelBuilder.Entity("NPP.Models.OrgProduct", b =>
                {
                    b.HasOne("NPP.Models.Organization", "IdOrgNavigation")
                        .WithMany("OrgProducts")
                        .HasForeignKey("IdOrg")
                        .IsRequired()
                        .HasConstraintName("FK_OrgProduct_Organization");

                    b.HasOne("NPP.Models.Product", "IdProductNavigation")
                        .WithMany("OrgProducts")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK_OrgProduct_Product1");

                    b.Navigation("IdOrgNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("NPP.Models.Organization", b =>
                {
                    b.HasOne("NPP.Models.County", "IdCountryNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("FK_Organization_County");

                    b.HasOne("NPP.Models.User", "IdUserOrgNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("IdUserOrg")
                        .IsRequired()
                        .HasConstraintName("FK_Organization_User");

                    b.Navigation("IdCountryNavigation");

                    b.Navigation("IdUserOrgNavigation");
                });

            modelBuilder.Entity("NPP.Models.Product", b =>
                {
                    b.HasOne("NPP.Models.TypeEquipment", "IdTypeEquipmentNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdTypeEquipment")
                        .IsRequired()
                        .HasConstraintName("FK_Product_TypeEquipment");

                    b.Navigation("IdTypeEquipmentNavigation");
                });

            modelBuilder.Entity("NPP.Models.User", b =>
                {
                    b.HasOne("NPP.Models.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("NPP.Models.Worker", b =>
                {
                    b.HasOne("NPP.Models.Department", "IdDepartmentNavigation")
                        .WithMany("Workers")
                        .HasForeignKey("IdDepartment")
                        .IsRequired()
                        .HasConstraintName("FK_Worker_Department1");

                    b.HasOne("NPP.Models.Post", "IdPostNavigation")
                        .WithMany("Workers")
                        .HasForeignKey("IdPost")
                        .HasConstraintName("FK_Worker_Post1");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("NPP.Models.Contract", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("NPP.Models.County", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("NPP.Models.Department", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("NPP.Models.OrgProduct", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("NPP.Models.Organization", b =>
                {
                    b.Navigation("OrgProducts");
                });

            modelBuilder.Entity("NPP.Models.Post", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("NPP.Models.Product", b =>
                {
                    b.Navigation("OrgProducts");
                });

            modelBuilder.Entity("NPP.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NPP.Models.Status", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("NPP.Models.TypeEquipment", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NPP.Models.User", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("NPP.Models.Worker", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
